<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAADjsAAA47AAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAAAAAAAAA0AAAATAAAAEgAAABIAAAASAAAAEgAA
        ABIAAAASAAAAEgAAABIAAAASAAAAEgAAABIAAAASAAAAEwAAAA0AAAAAAAAAAAAAAAIAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAAAFIAAADDAAAA8AAAAPYAAAD1AAAA9QAA
        APUAAAD1AAAA9QAAAPUAAAD1AAAA9QAAAPUAAAD1AAAA9QAAAPUAAAD2AAAA8AAAAMMAAABTAAAAAAAA
        AAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAAAAACKAAAA/wAAAP4AAAD3AAAA7wAA
        APAAAADwAAAA8AAAAPAAAADwAAAA8AAAAPAAAADwAAAA8AAAAPAAAADwAAAA8AAAAO8AAAD3AAAA/gAA
        AP8AAACKAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAVAAAAP8AAADzAAAAZQAA
        ABIAAAAPAAAADwAAAA4AAAAOAAAADgAAAA4AAAAOAAAADgAAAA4AAAAOAAAADgAAAA4AAAAPAAAADwAA
        ABIAAABlAAAA8wAAAP8AAABUAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAAAAAC8AAAA/wAA
        AGcAAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAwAAAAAAAABnAAAA/wAAALsAAAAAAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAA
        AOsAAAD5AAAAGQAAAAAAAAADAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAA
        AAEAAAABAAAAAQAAAAEAAAADAAAAAAAAABkAAAD5AAAA6gAAAAwAAAAAAAAAAQAAAAAAAAAAAAAAAAAA
        AAAAAAAMAAAA6wAAAPoAAAAaAAAAAAAAAAMAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAA
        AAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAMAAAAAAAAAGgAAAPoAAADpAAAADAAAAAAAAAABAAAAAAAA
        AAAAAAAAAAAAAgAAAAAAAAC6AAAA/wAAAGsAAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAAAAABrAAAA/wAAALkAAAAAAAAAAgAA
        AAAAAAAAAAAAAAAAAAAAAAADAAAAAAAAAFEAAAD/AAAA9QAAAGwAAAAWAAAAEgAAABMAAAASAAAAEgAA
        ABIAAAASAAAAEgAAABIAAAASAAAAEgAAABIAAAASAAAAEwAAABIAAAAWAAAAbAAAAPUAAAD/AAAAUQAA
        AAAAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAAAIUAAAD/AAAA/gAAAPsAAAD0AAAA9AAA
        APQAAAD0AAAA9AAAAPUAAAD1AAAA9QAAAPUAAAD0AAAA9AAAAPQAAAD0AAAA9AAAAPsAAAD+AAAA/wAA
        AIUAAAAAAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAAAEwAAAC8AAAA6gAA
        APAAAADvAAAA7wAAAPEAAAD0AAAA8AAAAOsAAADrAAAA8AAAAPQAAADxAAAA7wAAAO8AAADwAAAA6gAA
        ALwAAABMAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAA
        AAAAAAAKAAAADwAAAA4AAAASAAAACAAAAAAAAAAMAAAAHgAAAB4AAAALAAAAAAAAAAgAAAASAAAADgAA
        AA8AAAAKAAAAAAAAAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAADAAAAAgAAAAAAAAAAAAAAAQAAAAAAAAAbAAAAgwAAAM0AAADtAAAA7AAAAMwAAACCAAAAGgAA
        AAAAAAABAAAAAAAAAAAAAAADAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAQAAAAAAAAAXQAAAPMAAAD/AAAA/wAAAPYAAAD2AAAA/wAA
        AP8AAADzAAAAWwAAAAAAAAAHAAAAAQAAAAAAAAAAAAAAAQAAAAQAAAACAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAAAAAAF4AAAD/AAAA/wAAAKUAAAA2AAAAEgAA
        ABIAAAA4AAAAqQAAAP8AAAD/AAAAXAAAAAAAAAAEAAAADwAAAA8AAAABAAAAAAAAAAEAAAADAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAAAAAAgAAAA7gAAAP8AAABvAAAAAAAA
        AAIAAAAAAAAAAAAAAAIAAAAAAAAAdgAAAP8AAADlAAAAiwAAANAAAADyAAAA8QAAANEAAACIAAAAHgAA
        AAAAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAIUAAAD/AAAApAAA
        AAAAAAAFAAAAAwAAAAEAAAABAAAAAwAAAAQAAAAAAAAAwgAAAP8AAAD8AAAA/wAAAPMAAADzAAAA/wAA
        AP8AAADzAAAAXAAAAAAAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzAAA
        AP8AAAA+AAAAAAAAAAMAAAAAAAAAAAAAAAAAAAADAAAAAAAAAF4AAAD+AAAA/wAAAKcAAAAzAAAAFAAA
        ABQAAAAyAAAApgAAAP8AAAD/AAAAXgAAAAAAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAA
        AA0AAADtAAAA9wAAABYAAAAAAAAAAQAAAAAAAAAAAAAAAgAAAAAAAAAgAAAA7QAAAP8AAABxAAAAAAAA
        AAIAAADJAAAAyQAAAAIAAAAAAAAAcAAAAP8AAADuAAAAIAAAAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAA
        AAEAAAAAAAAADQAAAOwAAAD3AAAAFwAAAAAAAAABAAAAAAAAAAAAAAAEAAAAAAAAAIQAAAD/AAAApAAA
        AAAAAAAEAAAABAAAAMgAAADHAAAABAAAAAQAAAAAAAAApAAAAP8AAACFAAAAAAAAAAQAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAygAAAP8AAABAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAywAA
        AP8AAAA+AAAAAAAAAAQAAAAAAAAADAAAAAwAAAAAAAAABAAAAAAAAAA+AAAA/wAAAMwAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAACCAAAA/wAAAKcAAAAAAAAABAAAAAQAAAACAAAAAAAA
        ABAAAADtAAAA9wAAABcAAAAAAAAAAQAAAAAAAADEAAAAxAAAAAAAAAABAAAAAAAAABYAAAD3AAAA7gAA
        AA0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAAAB4AAADrAAAA/wAAAHQAAAAAAAAAAgAA
        AAEAAAAAAAAACwAAAOsAAAD4AAAAFwAAAAAAAAAAAAAAEAAAAPIAAADyAAAAEAAAAAAAAAAAAAAAFwAA
        APcAAADtAAAADQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAAAAAAFkAAAD/AAAA/wAA
        AKsAAAA8AAAAFgAAABUAAABDAAAA5gAAAP8AAABCAAAAAAAAAAAAAAAPAAAA7gAAAO4AAAAPAAAAAAAA
        AAAAAABAAAAA/wAAAMsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAAAAA
        AFYAAADvAAAA/wAAAP8AAAD5AAAA+QAAAP8AAAD8AAAA/wAAAKwAAAAAAAAAAAAAABQAAADyAAAA8gAA
        ABQAAAAAAAAAAAAAAKcAAAD/AAAAggAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAADAAAAAAAAABoAAACBAAAAzAAAAOsAAADsAAAAygAAAIcAAADkAAAA/wAAAHYAAAAAAAAAAAAA
        ALoAAAC6AAAAAAAAAAAAAAB1AAAA/wAAAOsAAAAeAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAADAAAAAQAAAAAAAAAAAAAACwAAAAsAAAADAAAAAAAAAFkAAAD/AAAA/wAA
        AK0AAAA5AAAAGAAAABcAAAA5AAAArAAAAP8AAAD/AAAAWQAAAAAAAAADAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAABAAAAAEAAAAAAAAAAAAAAAEAAAAGAAAAAAAA
        AFYAAADvAAAA/wAAAP8AAAD4AAAA+AAAAP8AAAD/AAAA7wAAAFYAAAAAAAAAAwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAABAAAAAAAA
        AAAAAAADAAAAAAAAABoAAACBAAAAzAAAAO0AAADtAAAAzAAAAIIAAAAbAAAAAAAAAAMAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAADAAAAAQAAAAAAAAAAAAAACwAAAAsAAAAAAAAAAAAAAAEAAAADAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAABAAAAAEAAAAAAAAAAAAAAAEAAAAEAAAAAgAA
        AAAAAAAAAAAAAAAAAAAAAAAAov/0X0gAAS8QAACPIAAAR0AAACdE//InhAACF4QAAhdE//InQAAAJyAA
        AEcQAACPTBCDL6JAJF/ogBMT+QAIRfIQgBTyIEAK8iiABPQhCEL0IRAi8ikUovIiFKHyEhhh+QAYYvqA
        GGL9QAzC/ZCABP9GQAr/0KAU//7ITf//oxM=
</value>
  </data>
</root>